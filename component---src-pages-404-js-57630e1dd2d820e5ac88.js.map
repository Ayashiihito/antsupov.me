{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/theme.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","theme","primaryDark","secondaryDark","primaryLight","secondaryLight","shadow","shadowLight","iconWidth","GlobalStyle","createGlobalStyle","_templateObject","SiteContainer","styled","div","withConfig","displayName","componentId","Footer","footer","FooterContainer","Layout","react_default","gatsby_browser_entry","styled_components_browser_esm","Fragment","href","target","rel","_StyledSpan","Date","getFullYear","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJV,EAAAY,EAAAV,EAAA,sBAAAW,IAAA,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAW,EAAAd,EAAA,GAAAe,EAAAf,EAAAK,EAAAS,GAaME,GAbNhB,EAAA,IAAAA,EAAA,KAa2BiB,IAAMC,cAAc,KAEzCL,EAAc,SAAAM,GAAK,OACvBf,EAAAK,EAAAC,cAACM,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDlB,EAAAK,EAAAC,cAAA,uCA4BfG,EAAYa,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,2LCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEvB,IAAMP,cAAckC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,6GCpBf,SAASY,EAATX,GAA2D,IAA5CY,EAA4CZ,EAA5CY,YAAaC,EAA+Bb,EAA/Ba,KAAMC,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,SAAU1C,EAAS2B,EAAT3B,MACxC2C,EADiDC,EAAAjC,KACjDgC,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAAjD,EAAAC,cAACiD,EAAAlD,EAAD,CACEmD,eAAgB,CACdT,QAEFxC,MAAOA,EACPkD,cAAa,QAAUP,EAAKG,aAAa9C,MACzCyC,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpD,GAEX,CACEqD,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASpD,GAEX,CACEmD,KAAI,sBACJC,QAASP,IAGVU,OACCb,EAASc,OAAS,EACd,CACEL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIvB,UAAY,CACdwB,YAAavB,IAAUE,OACvBsB,KAAMxB,IAAUE,OAChBuB,KAAMzB,IAAU2C,QAAQ3C,IAAUC,QAClCyB,SAAU1B,IAAU2C,QAAQ3C,IAAUE,QACtClB,MAAOgB,IAAUE,OAAOC,YAGXmB,yQCjFAsB,EAVD,CACZC,YAAa,UACbC,cAAe,QACfC,aAAc,UACdC,eAAgB,UAChBC,OAAQ,kCACRC,YAAa,iCACbC,UAAW,gTCEb,IAAMC,EAAcC,YAAHC,IAEC,SAAA9D,GAAK,OAAIA,EAAMoD,MAAMI,iBAIjCO,EAAgBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,oCAKbK,EAASL,IAAOM,OAAVJ,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,yJACI,SAAAhE,GAAK,OAAIA,EAAMoD,MAAMC,aAGxB,SAAArD,GAAK,OAAIA,EAAMoD,MAAMI,gBASnB,SAAAxD,GAAK,OAAIA,EAAMoD,MAAMG,eAK9BgB,EAAkBP,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,kDA4DNQ,IAtDA,SAAArD,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACbmE,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACEtE,MAAK,YASLC,OAAQ,kBACNoE,EAAAnF,EAAAC,cAACoF,EAAA,EAAD,CAAevB,MAAOA,GACpBqB,EAAAnF,EAAAC,cAAAkF,EAAAnF,EAAAsF,SAAA,KACEH,EAAAnF,EAAAC,cAACqE,EAAD,MACAa,EAAAnF,EAAAC,cAACwE,EAAD,KACEU,EAAAnF,EAAAC,cAAA,YAAOe,IAETmE,EAAAnF,EAAAC,cAAC8E,EAAD,KACEI,EAAAnF,EAAAC,cAACgF,EAAD,KACEE,EAAAnF,EAAAC,cAAA,gCACAkF,EAAAnF,EAAAC,cAAA,UACEkF,EAAAnF,EAAAC,cAAA,UACEkF,EAAAnF,EAAAC,cAAA,KACEsF,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,WAQFN,EAAAnF,EAAAC,cAAA,UACEkF,EAAAnF,EAAAC,cAAA,KAAGsF,KAAK,iCAAR,6BAMNJ,EAAAnF,EAAAC,cAAAyF,EAAA,WAOK,IAAIC,MAAOC,cAPhB,0BArCV/E,KAAAgF","file":"component---src-pages-404-js-57630e1dd2d820e5ac88.js","sourcesContent":["import React from 'react';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","const theme = {\r\n  primaryDark: '#392a2c',\r\n  secondaryDark: 'black',\r\n  primaryLight: '#f3f3f3',\r\n  secondaryLight: '#e1e6e9',\r\n  shadow: '1px 1px 10px rgba(0, 0, 0, 0.3)',\r\n  shadowLight: '1px 1px 4px rgba(0, 0, 0, 0.3)',\r\n  iconWidth: '7rem',\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport styled, {\r\n  ThemeProvider,\r\n  createGlobalStyle,\r\n} from 'styled-components/macro';\r\n\r\nimport theme from '../theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: ${props => props.theme.secondaryLight};;\r\n  }\r\n`;\r\n\r\nconst SiteContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 960px;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  background: ${props => props.theme.primaryDark};\r\n  &,\r\n  & h3 {\r\n    color: ${props => props.theme.secondaryLight};\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ul {\r\n    list-style-type: none;\r\n    a {\r\n      color: ${props => props.theme.primaryLight};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FooterContainer = styled.div`\r\n  margin: 2rem 0;\r\n  width: 100%;\r\n  max-width: 960px;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={() => (\r\n      <ThemeProvider theme={theme}>\r\n        <>\r\n          <GlobalStyle />\r\n          <SiteContainer>\r\n            <main>{children}</main>\r\n          </SiteContainer>\r\n          <Footer>\r\n            <FooterContainer>\r\n              <h3>Связаться со мной:</h3>\r\n              <ul>\r\n                <li>\r\n                  <a\r\n                    href=\"https://github.com/Ayashiihito\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    GitHub\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"mailto:antsupov.dev@gmail.com\">\r\n                    antsupov.dev@gmail.com\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </FooterContainer>\r\n            <span\r\n              css={`\r\n                background: rgba(0, 0, 0, 0.4);\r\n                padding: 0.5rem 2rem;\r\n                width: 100%;\r\n              `}\r\n            >\r\n              © {new Date().getFullYear()} Vladimir Antsupov\r\n            </span>\r\n          </Footer>\r\n        </>\r\n      </ThemeProvider>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}